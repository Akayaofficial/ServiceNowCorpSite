# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: |
          # Add your build commands here

 test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
    - name: ServiceNow DevOps Unit Test Results
    # You may pin to the exact commit or the version.
      uses: ServiceNow/servicenow-devops-test-report@dev
        with:
          devops-integration-user-name: ${{ secrets.SN_USER }}
          devops-integration-user-password: ${{ secrets.SN_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'tests'
          xml-report-filename: 'sample-test-results.xml'
          
  registerArtifact:
    name: 'Register Artifact'
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: ServiceNow DevOps Register Artifact
    # You may pin to the exact commit or the version.          
      uses: ServiceNow/servicenow-devops-register-artifact@v2.0.0
     with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          # List of Artifacts to be registered
          artifacts: '[
              {
                  "name": "app-devops.jar",
                  "version": "1.${{ github.run_number }}",
                  "semanticVersion": "1.${{ github.run_number }}.0",
                  "repositoryName": "${{ github.repository }}"
              }
          ]'
